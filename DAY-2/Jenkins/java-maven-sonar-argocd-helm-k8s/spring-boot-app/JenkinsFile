pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "sanjayhar/ultimate-cicd:${BUILD_NUMBER}"
    SONAR_URL = "http://34.201.116.83:9000"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[url: 'https://github.com/sanjayhar/ELEVATE_LABES.git']],
          extensions: [[$class: 'CloneOption', noTags: false, shallow: false, depth: 0]]
        ])
      }
    }

    stage('Build and Test') {
      steps {
        dir('DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
          sh 'mvn clean package'
        }
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          dir('DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh "mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=$SONAR_URL"
          }
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment { REGISTRY_CREDENTIALS = credentials('dockerhub-cred') }
      steps {
        script {
          dir('DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
            sh "docker build -t ${DOCKER_IMAGE} ."
            def img = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('', 'dockerhub-cred') {
              img.push()
            }
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "sanjay@example.com"
            git config user.name "sanjayhar"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Bump image tag to ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/sanjayhar/ELEVATE_LABES HEAD:main
          '''
        }
      }
    }
  }

  post {
    success { echo '✅ Pipeline succeeded!' }
    failure { echo '❌ Pipeline failed.' }
  }
}
