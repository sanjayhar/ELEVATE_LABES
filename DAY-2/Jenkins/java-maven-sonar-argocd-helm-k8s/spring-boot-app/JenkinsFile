pipeline {
    agent {
        docker {
            image 'maven:3.8.6-openjdk-17'
            args '-v /root/.m2:/root/.m2'
        }
    }

    environment {
        SONAR_TOKEN = credentials('sonar-token')
        DOCKER_HUB_CREDS = credentials('dockerhub-cred')
        IMAGE_NAME = 'sanjayhar/spring-boot-app'
        VERSION = 'v1'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/sanjayhar/ELEVATE_LABES.git'
            }
        }

        stage('Build and Test') {
            steps {
                dir('DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Static Code Analysis') {
            steps {
                dir('DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app') {
                    sh """
                        mvn sonar:sonar \
                          -Dsonar.projectKey=spring-boot-app \
                          -Dsonar.host.url=https://sonarcloud.io \
                          -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-cred') {
                        def app = docker.build("${IMAGE_NAME}:${VERSION}", "DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s/spring-boot-app")
                        app.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            steps {
                dir('DAY-2/Jenkins/java-maven-sonar-argocd-helm-k8s') {
                    sh "sed -i 's|image:.*|image: ${IMAGE_NAME}:${VERSION}|' k8s/deployment.yaml"
                }
            }
        }
    }

    post {
        failure {
            echo '❌ Pipeline failed.'
        }
        success {
            echo '✅ Pipeline succeeded!'
        }
    }
}
