pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "sanjayharish/ultimate-cicd-pipeline"
        IMAGE_TAG = "v1"
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                echo '🔄 Checking out code...'
                checkout scm
            }
        }

        stage('Build with Maven') {
            steps {
                echo '⚙️ Building with Maven using Docker image...'
                sh '''
                    docker run --rm \
                      -v "$(pwd)/java-maven-sonar-argocd-helm-k8s/spring-boot-app":/usr/src/mymaven \
                      -w /usr/src/mymaven \
                      maven:3.8.6-eclipse-temurin-17 \
                      mvn clean install
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                echo '🐳 Building Docker image...'
                sh """
                  docker build -t ${DOCKER_IMAGE}:${IMAGE_TAG} java-maven-sonar-argocd-helm-k8s/spring-boot-app
                """
            }
        }

        stage('Push Docker Image to DockerHub') {
            steps {
                echo '📤 Pushing Docker image to DockerHub...'
                withDockerRegistry(credentialsId: 'dockerhub-cred', url: '') {
                    sh "docker push ${DOCKER_IMAGE}:${IMAGE_TAG}"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                echo '🚀 Deploying to Kubernetes...'
                sh '''
                  kubectl apply -f java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                  kubectl apply -f java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/service.yml
                '''
            }
        }
    }

    post {
        success {
            echo '✅ Pipeline completed successfully!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}
